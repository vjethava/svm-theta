classdef DIMACS
    % Depends on Graph class
    properties (Constant)
        graph_names = { {'c-fat200-1'; 'c-fat200-2'; 'c-fat200-5'}; ...
         {'c-fat500-1'; 'c-fat500-2'; 'c-fat500-5'; 'c-fat500-10'}; ...
         {'brock200_1'; 'brock200_2';'brock200_3';'brock200_4'}; ...
         {'brock400_1'; 'brock400_2';'brock400_3';'brock400_4'}; ...
         {'brock800_1'; 'brock800_2';'brock800_3';'brock800_4'}; ...
         {'p_hat300-1'; 'p_hat300-2'; 'p_hat300-3'}; ...
         {'p_hat500-1'; 'p_hat500-2'; 'p_hat500-3'}; ...
         {'p_hat700-1'; 'p_hat700-2'; 'p_hat700-3'}; ...
         {'p_hat1000-1'; 'p_hat1000-2'; 'p_hat1000-3'}; ...
         {'p_hat1500-1'; 'p_hat1500-2'; 'p_hat1500-3'}; ...
         {'san200_0.7_1'; 'san200_0.7_1'; 'san200_0.9_1'; ...
            'san200_0.9_2'; 'san200_0.9_3'}; ...
         {'san400_0.5_1'; 'san400_0.7_1'; 'san400_0.7_2'; ...
            'san400_0.7_3'; 'san400_0.9_1'}; ...
         {'sanr200_0.7'; 'sanr200_0.9'}; ...
         {'sanr400_0.5'; 'sanr400_0.7'}; };
        sparse_graph_idx = [1 2 6 7 8 9 10]; 
        dense_graph_idx = [3 4 5 11 12 13 14]; 
    end
    methods (Static)
        function [G] = get_graphs(family_idx, sparse_check)
            % Get the right group of graphs, while taking the complement
            % for dense graphs if sparse_check = true. 
            if nargin < 2
                sparse_check = false;
            end
            names = DIMACS.graph_names{family_idx};
            num_graphs = length(names); 
            G = cell(num_graphs, 1);
            for i=1:num_graphs
                if sparse_check && ismember(family_idx, DIMACS.dense_graph_idx)
                    G{i} = Graph.DIMACS(names{i}).complement; 
                else
                    G{i} = Graph.DIMACS(names{i}); 
                end
            end
            
        end
        
        
    end
end
